<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jarvis</groupId>
    <artifactId>marcus-spring-practice</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>
    <modules>
        <!--spring-data项目练习，使用了jpa的java持久化API-->
        <module>spring-boot-data-play</module>
        <module>spring-cloud-alibaba-play</module>
        <module>spring-cloud-netfix-play</module>
        <module>logback-play-spring-boot-starter</module>
        <module>kafka-play</module>
        <module>java8-play</module>
        <module>elkalert-play</module>
        <module>elasticsearch-play</module>
        <module>concurrent-paly</module>
        <module>rocketmq-play</module>
        <module>rocksdb-play</module>
        <module>data-transfer-object-common</module>
        <!--大众点评监控平台central-application-tracking 集成-->
        <module>central-application-tracking-play</module>
    </modules>
    <!--版本资源管理-->
    <properties>
        <!--docker打包镜像前缀，仓库名和命名空间-->
        <docker.image.prefix>registry.aliyuncs.com/linhuatest</docker.image.prefix>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
        <mysql.version>8.0.19</mysql.version>
        <!--本工程使用spring-boot 2.3.2.RELEASE版本作为全局的spring-boot版本，对用spring5.X版本-->
        <spring-boot.version>2.3.2.RELEASE</spring-boot.version>
        <spring-cloud.version>Hoxton.SR6</spring-cloud.version>
    </properties>

    <organization>
        <name>Jarvis Corporation</name>
        <url>https://www.cecilia-marcus.cn/</url>
    </organization>
    <!--整个pom只做版本管理-->
    <dependencyManagement>
        <dependencies>
            <!-- 增加Jackson的Hibernate类型支持 -->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-hibernate5</artifactId>
                <version>2.11.0</version>
            </dependency>
            <!-- 增加Jackson XML支持 -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>2.11.0</version>
            </dependency>
            <!--jackson依赖引入和管理-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.11.0</version>
            </dependency>
            <dependency>
                <groupId>org.jadira.usertype</groupId>
                <artifactId>usertype.core</artifactId>
                <version>6.0.1.GA</version>
            </dependency>
            <dependency>
                <groupId>org.joda</groupId>
                <artifactId>joda-money</artifactId>
                <version>1.0.1</version>
            </dependency>
            <!--swagger-ui整合spring-boot-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>3.0.0</version>
            </dependency>
            <!--kafkaAppender依赖-->
            <dependency>
                <groupId>com.github.danielwegener</groupId>
                <artifactId>logback-kafka-appender</artifactId>
                <version>0.2.0-RC1</version>
            </dependency>
            <!--Logstash编码-->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>5.0</version>
            </dependency>
            <!--fastjson依赖-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.71</version>
            </dependency>
            <!--springboot依赖-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--springCloud版本管理-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--springCloud依赖版管理-->
            <!--<dependency>
                <groupId>io.pivotal.spring.cloud</groupId>
                <artifactId>spring-cloud-services-dependencies</artifactId>
                <version>2.2.3.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <!--spring-boot打包工具-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- docker插件 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <!--docker文件所在的目录-->
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <profileActive>dev</profileActive>
            </properties>
            <activation>
                <jdk>1.8</jdk>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profileActive>prod</profileActive>
            </properties>
        </profile>
    </profiles>
    <!--阿里云仓库-->
    <repositories>
        <repository>
            <id>spring-ali</id>
            <url>https://maven.aliyun.com/repository/spring</url>
            <releases>
                <!--当 Maven 验证构件校验文件失败时该怎么做：ignore (忽略) ，fail (失败) ，或 warn (警告) -->
                <checksumPolicy>fail</checksumPolicy>
                <!--该元素指定更新发生的频率，Maven 会比较本地 POM 和远程 POM 的时间戳；always(一直)，daily(默认，每日)，interval：X (X 是以分钟为单位的时间间隔)，never（从不）-->
                <updatePolicy>daily</updatePolicy>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>public-ali</id>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
        </repository>
        <!-- Milestone的依赖不在主仓库里 -->
        <repository>
            <id>spring-milestone</id>
            <name>Spring Maven MILESTONE Repository</name>
            <url>https://repo.spring.io/libs-milestone/</url>
            <layout>default</layout>
            <releases>
                <updatePolicy>always</updatePolicy>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

    </repositories>
</project>